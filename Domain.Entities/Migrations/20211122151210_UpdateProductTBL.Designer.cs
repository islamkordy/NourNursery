// <auto-generated />
using System;
using Domain.Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Domain.Entities.Migrations
{
    [DbContext(typeof(HDDbContext))]
    [Migration("20211122151210_UpdateProductTBL")]
    partial class UpdateProductTBL
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Entity.TBL_About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("DescAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaceBook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<string>("Linkedin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MissionAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MissionEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifyUserId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTitleAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTitleEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisionAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisionEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisionImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisionImage2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Youtube")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("ModifyUserId");

                    b.ToTable("TBL_About", "dbo");
                });

            modelBuilder.Entity("Domain.Entities.Entity.TBL_Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifyUserId")
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("ModifyUserId");

                    b.ToTable("TBL_Category", "dbo");
                });

            modelBuilder.Entity("Domain.Entities.Entity.TBL_ContactUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifyUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("ModifyUserId");

                    b.ToTable("TBL_ContactUs", "dbo");
                });

            modelBuilder.Entity("Domain.Entities.Entity.TBL_Faqs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifyUserId")
                        .HasColumnType("int");

                    b.Property<string>("TitleAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("ModifyUserId");

                    b.ToTable("TBL_Faqs", "dbo");
                });

            modelBuilder.Entity("Domain.Entities.Entity.TBL_FaqsDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("DescAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FaqsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifyUserId")
                        .HasColumnType("int");

                    b.Property<string>("QuestionAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("FaqsId");

                    b.HasIndex("ModifyUserId");

                    b.ToTable("TBL_FaqsDetails", "dbo");
                });

            modelBuilder.Entity("Domain.Entities.Entity.TBL_Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("DescAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescAr2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescEn2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainPage")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifyUserId")
                        .HasColumnType("int");

                    b.Property<string>("TitleAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("ModifyUserId");

                    b.ToTable("TBL_Product", "dbo");
                });

            modelBuilder.Entity("Domain.Entities.Entity.TBL_Sliders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("DescAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifyUserId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("ModifyUserId");

                    b.ToTable("TBL_Sliders", "dbo");
                });

            modelBuilder.Entity("Domain.Entities.Entity.TBL_User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("HousekeeperId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifyUserId")
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("ModifyUserId");

                    b.ToTable("TBL_User", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2021, 11, 22, 17, 12, 9, 454, DateTimeKind.Local).AddTicks(3745),
                            CreateUserId = 1,
                            IsBlock = false,
                            NameAr = "مدير النظام",
                            NameEn = "System admin",
                            Password = "11KThNU1zRI=",
                            UserName = "admin",
                            UserType = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.Entity.TBL_About", b =>
                {
                    b.HasOne("Domain.Entities.Entity.TBL_User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreateUserId");

                    b.HasOne("Domain.Entities.Entity.TBL_User", "ModifyedUser")
                        .WithMany()
                        .HasForeignKey("ModifyUserId");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifyedUser");
                });

            modelBuilder.Entity("Domain.Entities.Entity.TBL_Category", b =>
                {
                    b.HasOne("Domain.Entities.Entity.TBL_User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreateUserId");

                    b.HasOne("Domain.Entities.Entity.TBL_User", "ModifyedUser")
                        .WithMany()
                        .HasForeignKey("ModifyUserId");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifyedUser");
                });

            modelBuilder.Entity("Domain.Entities.Entity.TBL_ContactUs", b =>
                {
                    b.HasOne("Domain.Entities.Entity.TBL_User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreateUserId");

                    b.HasOne("Domain.Entities.Entity.TBL_User", "ModifyedUser")
                        .WithMany()
                        .HasForeignKey("ModifyUserId");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifyedUser");
                });

            modelBuilder.Entity("Domain.Entities.Entity.TBL_Faqs", b =>
                {
                    b.HasOne("Domain.Entities.Entity.TBL_User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreateUserId");

                    b.HasOne("Domain.Entities.Entity.TBL_User", "ModifyedUser")
                        .WithMany()
                        .HasForeignKey("ModifyUserId");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifyedUser");
                });

            modelBuilder.Entity("Domain.Entities.Entity.TBL_FaqsDetails", b =>
                {
                    b.HasOne("Domain.Entities.Entity.TBL_User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreateUserId");

                    b.HasOne("Domain.Entities.Entity.TBL_Faqs", "Faqs")
                        .WithMany("FaqsDetails")
                        .HasForeignKey("FaqsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Entity.TBL_User", "ModifyedUser")
                        .WithMany()
                        .HasForeignKey("ModifyUserId");

                    b.Navigation("CreatedUser");

                    b.Navigation("Faqs");

                    b.Navigation("ModifyedUser");
                });

            modelBuilder.Entity("Domain.Entities.Entity.TBL_Product", b =>
                {
                    b.HasOne("Domain.Entities.Entity.TBL_Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Domain.Entities.Entity.TBL_User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreateUserId");

                    b.HasOne("Domain.Entities.Entity.TBL_User", "ModifyedUser")
                        .WithMany()
                        .HasForeignKey("ModifyUserId");

                    b.Navigation("Category");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifyedUser");
                });

            modelBuilder.Entity("Domain.Entities.Entity.TBL_Sliders", b =>
                {
                    b.HasOne("Domain.Entities.Entity.TBL_User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreateUserId");

                    b.HasOne("Domain.Entities.Entity.TBL_User", "ModifyedUser")
                        .WithMany()
                        .HasForeignKey("ModifyUserId");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifyedUser");
                });

            modelBuilder.Entity("Domain.Entities.Entity.TBL_User", b =>
                {
                    b.HasOne("Domain.Entities.Entity.TBL_User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreateUserId");

                    b.HasOne("Domain.Entities.Entity.TBL_User", "ModifyedUser")
                        .WithMany()
                        .HasForeignKey("ModifyUserId");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifyedUser");
                });

            modelBuilder.Entity("Domain.Entities.Entity.TBL_Faqs", b =>
                {
                    b.Navigation("FaqsDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
